   1               		.file	"light_ws2812.c"
   2               	__SP_L__ = 0x3d
   3               	__SREG__ = 0x3f
   4               	__tmp_reg__ = 0
   5               	__zero_reg__ = 1
   6               		.text
   7               	.Ltext0:
   8               		.cfi_sections	.debug_frame
   9               	.global	ws2812_setleds
  11               	ws2812_setleds:
  12               	.LFB0:
  13               		.file 1 "light_ws2812.c"
   1:light_ws2812.c **** /*
   2:light_ws2812.c **** * light weight WS2812 lib V2.0b
   3:light_ws2812.c **** *
   4:light_ws2812.c **** * Controls WS2811/WS2812/WS2812B RGB-LEDs
   5:light_ws2812.c **** * Author: Tim (cpldcpu@gmail.com)
   6:light_ws2812.c **** *
   7:light_ws2812.c **** * Jan 18th, 2014  v2.0b Initial Version
   8:light_ws2812.c **** * Nov 29th, 2015  v2.3  Added SK6812RGBW support
   9:light_ws2812.c **** *
  10:light_ws2812.c **** * License: GNU GPL v2+ (see License.txt)
  11:light_ws2812.c **** */
  12:light_ws2812.c **** 
  13:light_ws2812.c **** #include "light_ws2812.h"
  14:light_ws2812.c **** #include <avr/interrupt.h>
  15:light_ws2812.c **** #include <avr/io.h>
  16:light_ws2812.c **** //#include <util/delay.h>
  17:light_ws2812.c **** 
  18:light_ws2812.c **** // Setleds for standard RGB
  19:light_ws2812.c **** void inline ws2812_setleds(struct cRGB *ledarray, uint16_t leds)
  20:light_ws2812.c **** {
  14               		.loc 1 20 0
  15               		.cfi_startproc
  16               	.LVL0:
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.LBB8:
  22               	.LBB9:
  21:light_ws2812.c ****    ws2812_setleds_pin(ledarray,leds, _BV(ws2812_pin));
  22:light_ws2812.c **** }
  23:light_ws2812.c **** 
  24:light_ws2812.c **** void inline ws2812_setleds_pin(struct cRGB *ledarray, uint16_t leds, uint8_t pinmask)
  25:light_ws2812.c **** {
  26:light_ws2812.c ****   ws2812_sendarray_mask((uint8_t*)ledarray,leds+leds+leds,pinmask);
  23               		.loc 1 26 0
  24 0000 9B01      		movw r18,r22
  25 0002 220F      		lsl r18
  26 0004 331F      		rol r19
  27 0006 620F      		add r22,r18
  28 0008 731F      		adc r23,r19
  29               	.LVL1:
  30               	.LBB10:
  31               	.LBB11:
  27:light_ws2812.c ****   //_delay_us(ws2812_resettime);
  28:light_ws2812.c **** }
  29:light_ws2812.c **** /*
  30:light_ws2812.c **** // Setleds for SK6812RGBW
  31:light_ws2812.c **** void inline ws2812_setleds_rgbw(struct cRGBW *ledarray, uint16_t leds)
  32:light_ws2812.c **** {
  33:light_ws2812.c ****   ws2812_sendarray_mask((uint8_t*)ledarray,leds<<2,_BV(ws2812_pin));
  34:light_ws2812.c ****   _delay_us(ws2812_resettime);
  35:light_ws2812.c **** }
  36:light_ws2812.c **** */
  37:light_ws2812.c **** void ws2812_sendarray(uint8_t *data,uint16_t datlen)
  38:light_ws2812.c **** {
  39:light_ws2812.c ****   ws2812_sendarray_mask(data,datlen,_BV(ws2812_pin));
  40:light_ws2812.c **** }
  41:light_ws2812.c **** 
  42:light_ws2812.c **** /*
  43:light_ws2812.c ****   This routine writes an array of bytes with RGB values to the Dataout pin
  44:light_ws2812.c ****   using the fast 800kHz clockless WS2811/2812 protocol.
  45:light_ws2812.c **** */
  46:light_ws2812.c **** 
  47:light_ws2812.c **** // Timing in ns
  48:light_ws2812.c **** #define w_zeropulse   350
  49:light_ws2812.c **** #define w_onepulse    700
  50:light_ws2812.c **** #define w_totalperiod 1250
  51:light_ws2812.c **** 
  52:light_ws2812.c **** // Fixed cycles used by the inner loop
  53:light_ws2812.c **** #define w_fixedlow    2
  54:light_ws2812.c **** #define w_fixedhigh   4
  55:light_ws2812.c **** #define w_fixedtotal  8
  56:light_ws2812.c **** 
  57:light_ws2812.c **** // Insert NOPs to match the timing, if possible
  58:light_ws2812.c **** #define w_zerocycles    (((F_CPU/1000)*w_zeropulse          )/1000000)
  59:light_ws2812.c **** #define w_onecycles     (((F_CPU/1000)*w_onepulse    )/1000000)
  60:light_ws2812.c **** #define w_totalcycles   (((F_CPU/1000)*w_totalperiod )/1000000)
  61:light_ws2812.c **** 
  62:light_ws2812.c **** // w1 - nops between rising edge and falling edge - low
  63:light_ws2812.c **** #define w1 (w_zerocycles-w_fixedlow)
  64:light_ws2812.c **** // w2   nops between fe low and fe high
  65:light_ws2812.c **** #define w2 (w_onecycles-w_fixedhigh-w1)
  66:light_ws2812.c **** // w3   nops to complete loop
  67:light_ws2812.c **** #define w3 (w_totalcycles-w_fixedtotal-w1-w2)
  68:light_ws2812.c **** 
  69:light_ws2812.c **** #if w1>0
  70:light_ws2812.c ****   #define w1_nops w1
  71:light_ws2812.c **** #else
  72:light_ws2812.c ****   #define w1_nops  0
  73:light_ws2812.c **** #endif
  74:light_ws2812.c **** 
  75:light_ws2812.c **** // The only critical timing parameter is the minimum pulse length of the "0"
  76:light_ws2812.c **** // Warn or throw error if this timing can not be met with current F_CPU settings.
  77:light_ws2812.c **** #define w_lowtime ((w1_nops+w_fixedlow)*1000000)/(F_CPU/1000)
  78:light_ws2812.c **** #if w_lowtime>550
  79:light_ws2812.c ****    #error "Light_ws2812: Sorry, the clock speed is too low. Did you set F_CPU correctly?"
  80:light_ws2812.c **** #elif w_lowtime>450
  81:light_ws2812.c ****    #warning "Light_ws2812: The timing is critical and may only work on WS2812B, not on WS2812(S)."
  82:light_ws2812.c ****    #warning "Please consider a higher clockspeed, if possible"
  83:light_ws2812.c **** #endif   
  84:light_ws2812.c **** 
  85:light_ws2812.c **** #if w2>0
  86:light_ws2812.c **** #define w2_nops w2
  87:light_ws2812.c **** #else
  88:light_ws2812.c **** #define w2_nops  0
  89:light_ws2812.c **** #endif
  90:light_ws2812.c **** 
  91:light_ws2812.c **** #if w3>0
  92:light_ws2812.c **** #define w3_nops w3
  93:light_ws2812.c **** #else
  94:light_ws2812.c **** #define w3_nops  0
  95:light_ws2812.c **** #endif
  96:light_ws2812.c **** 
  97:light_ws2812.c **** #define w_nop1  "nop      \n\t"
  98:light_ws2812.c **** #define w_nop2  "rjmp .+0 \n\t"
  99:light_ws2812.c **** #define w_nop4  w_nop2 w_nop2
 100:light_ws2812.c **** #define w_nop8  w_nop4 w_nop4
 101:light_ws2812.c **** #define w_nop16 w_nop8 w_nop8
 102:light_ws2812.c **** 
 103:light_ws2812.c **** void inline ws2812_sendarray_mask(uint8_t *data,uint16_t datlen,uint8_t maskhi)
 104:light_ws2812.c **** {
 105:light_ws2812.c ****   uint8_t curbyte,ctr,masklo;
 106:light_ws2812.c ****   uint8_t sreg_prev;
 107:light_ws2812.c **** 
 108:light_ws2812.c ****   ws2812_DDRREG |= maskhi; // Enable output
  32               		.loc 1 108 0
  33 000a B89A      		sbi 0x17,0
 109:light_ws2812.c **** 
 110:light_ws2812.c ****   masklo	=~maskhi&ws2812_PORTREG;
  34               		.loc 1 110 0
  35 000c 28B3      		in r18,0x18
  36 000e 2E7F      		andi r18,lo8(-2)
  37               	.LVL2:
 111:light_ws2812.c ****   maskhi |=        ws2812_PORTREG;
  38               		.loc 1 111 0
  39 0010 38B3      		in r19,0x18
  40 0012 3160      		ori r19,lo8(1)
  41               	.LVL3:
 112:light_ws2812.c **** 
 113:light_ws2812.c ****   sreg_prev=SREG;
  42               		.loc 1 113 0
  43 0014 4FB7      		in r20,__SREG__
  44               	.LVL4:
 114:light_ws2812.c ****   cli();
  45               		.loc 1 114 0
  46               	/* #APP */
  47               	 ;  114 "light_ws2812.c" 1
  48 0016 F894      		cli
  49               	 ;  0 "" 2
  50               	.LVL5:
 115:light_ws2812.c **** 
 116:light_ws2812.c ****   while (datlen--) {
  51               		.loc 1 116 0
  52               	/* #NOAPP */
  53 0018 6115      		cp r22,__zero_reg__
  54 001a 7105      		cpc r23,__zero_reg__
  55 001c 01F0      		breq .L2
  56 001e FC01      		movw r30,r24
  57 0020 680F      		add r22,r24
  58 0022 791F      		adc r23,r25
  59               	.LVL6:
  60               	.L3:
 117:light_ws2812.c ****     curbyte=*data++;
  61               		.loc 1 117 0
  62 0024 8191      		ld r24,Z+
  63               	.LVL7:
 118:light_ws2812.c **** 
 119:light_ws2812.c ****     __asm volatile(
  64               		.loc 1 119 0
  65               	/* #APP */
  66               	 ;  119 "light_ws2812.c" 1
  67 0026 98E0      		       ldi   r25,8  
  68               		loop54:            
  69 0028 38BB      		       out   24,r19 
  70 002a 0000      		nop      
  71 002c 87FF      		       sbrs  r24,7  
  72 002e 28BB      		       out   24,r18 
  73 0030 880F      		       lsl   r24    
  74 0032 0000      		nop      
  75 0034 28BB      		       out   24,r18 
  76 0036 00C0      		rjmp .+0 
  77 0038 9A95      		       dec   r25    
  78 003a 01F4      		       brne  loop54
  79               		
  80               	 ;  0 "" 2
  81               	.LVL8:
 116:light_ws2812.c ****     curbyte=*data++;
  82               		.loc 1 116 0
  83               	/* #NOAPP */
  84 003c E617      		cp r30,r22
  85 003e F707      		cpc r31,r23
  86 0040 01F4      		brne .L3
  87               	.LVL9:
  88               	.L2:
 120:light_ws2812.c ****     "       ldi   %0,8  \n\t"
 121:light_ws2812.c ****     "loop%=:            \n\t"
 122:light_ws2812.c ****     "       out   %2,%3 \n\t"    //  '1' [01] '0' [01] - re
 123:light_ws2812.c **** #if (w1_nops&1)
 124:light_ws2812.c **** w_nop1
 125:light_ws2812.c **** #endif
 126:light_ws2812.c **** #if (w1_nops&2)
 127:light_ws2812.c **** w_nop2
 128:light_ws2812.c **** #endif
 129:light_ws2812.c **** #if (w1_nops&4)
 130:light_ws2812.c **** w_nop4
 131:light_ws2812.c **** #endif
 132:light_ws2812.c **** #if (w1_nops&8)
 133:light_ws2812.c **** w_nop8
 134:light_ws2812.c **** #endif
 135:light_ws2812.c **** #if (w1_nops&16)
 136:light_ws2812.c **** w_nop16
 137:light_ws2812.c **** #endif
 138:light_ws2812.c ****     "       sbrs  %1,7  \n\t"    //  '1' [03] '0' [02]
 139:light_ws2812.c ****     "       out   %2,%4 \n\t"    //  '1' [--] '0' [03] - fe-low
 140:light_ws2812.c ****     "       lsl   %1    \n\t"    //  '1' [04] '0' [04]
 141:light_ws2812.c **** #if (w2_nops&1)
 142:light_ws2812.c ****   w_nop1
 143:light_ws2812.c **** #endif
 144:light_ws2812.c **** #if (w2_nops&2)
 145:light_ws2812.c ****   w_nop2
 146:light_ws2812.c **** #endif
 147:light_ws2812.c **** #if (w2_nops&4)
 148:light_ws2812.c ****   w_nop4
 149:light_ws2812.c **** #endif
 150:light_ws2812.c **** #if (w2_nops&8)
 151:light_ws2812.c ****   w_nop8
 152:light_ws2812.c **** #endif
 153:light_ws2812.c **** #if (w2_nops&16)
 154:light_ws2812.c ****   w_nop16 
 155:light_ws2812.c **** #endif
 156:light_ws2812.c ****     "       out   %2,%4 \n\t"    //  '1' [+1] '0' [+1] - fe-high
 157:light_ws2812.c **** #if (w3_nops&1)
 158:light_ws2812.c **** w_nop1
 159:light_ws2812.c **** #endif
 160:light_ws2812.c **** #if (w3_nops&2)
 161:light_ws2812.c **** w_nop2
 162:light_ws2812.c **** #endif
 163:light_ws2812.c **** #if (w3_nops&4)
 164:light_ws2812.c **** w_nop4
 165:light_ws2812.c **** #endif
 166:light_ws2812.c **** #if (w3_nops&8)
 167:light_ws2812.c **** w_nop8
 168:light_ws2812.c **** #endif
 169:light_ws2812.c **** #if (w3_nops&16)
 170:light_ws2812.c **** w_nop16
 171:light_ws2812.c **** #endif
 172:light_ws2812.c **** 
 173:light_ws2812.c ****     "       dec   %0    \n\t"    //  '1' [+2] '0' [+2]
 174:light_ws2812.c ****     "       brne  loop%=\n\t"    //  '1' [+3] '0' [+4]
 175:light_ws2812.c ****     :	"=&d" (ctr)
 176:light_ws2812.c ****     :	"r" (curbyte), "I" (_SFR_IO_ADDR(ws2812_PORTREG)), "r" (maskhi), "r" (masklo)
 177:light_ws2812.c ****     );
 178:light_ws2812.c ****   }
 179:light_ws2812.c ****   
 180:light_ws2812.c ****   SREG=sreg_prev;
  89               		.loc 1 180 0
  90 0042 4FBF      		out __SREG__,r20
 181:light_ws2812.c ****   sei();
  91               		.loc 1 181 0
  92               	/* #APP */
  93               	 ;  181 "light_ws2812.c" 1
  94 0044 7894      		sei
  95               	 ;  0 "" 2
  96               	.LVL10:
  97               	/* #NOAPP */
  98 0046 0895      		ret
  99               	.LBE11:
 100               	.LBE10:
 101               	.LBE9:
 102               	.LBE8:
 103               		.cfi_endproc
 104               	.LFE0:
 106               	.global	ws2812_setleds_pin
 108               	ws2812_setleds_pin:
 109               	.LFB1:
  25:light_ws2812.c ****   ws2812_sendarray_mask((uint8_t*)ledarray,leds+leds+leds,pinmask);
 110               		.loc 1 25 0
 111               		.cfi_startproc
 112               	.LVL11:
 113               	/* prologue: function */
 114               	/* frame size = 0 */
 115               	/* stack size = 0 */
 116               	.L__stack_usage = 0
  26:light_ws2812.c ****   //_delay_us(ws2812_resettime);
 117               		.loc 1 26 0
 118 0048 9B01      		movw r18,r22
 119 004a 220F      		lsl r18
 120 004c 331F      		rol r19
 121 004e 620F      		add r22,r18
 122 0050 731F      		adc r23,r19
 123               	.LVL12:
 124               	.LBB14:
 125               	.LBB15:
 108:light_ws2812.c **** 
 126               		.loc 1 108 0
 127 0052 27B3      		in r18,0x17
 128 0054 242B      		or r18,r20
 129 0056 27BB      		out 0x17,r18
 110:light_ws2812.c ****   maskhi |=        ws2812_PORTREG;
 130               		.loc 1 110 0
 131 0058 28B3      		in r18,0x18
 132 005a 342F      		mov r19,r20
 133 005c 3095      		com r19
 134 005e 2323      		and r18,r19
 135               	.LVL13:
 111:light_ws2812.c **** 
 136               		.loc 1 111 0
 137 0060 38B3      		in r19,0x18
 138 0062 432B      		or r20,r19
 139               	.LVL14:
 113:light_ws2812.c ****   cli();
 140               		.loc 1 113 0
 141 0064 3FB7      		in r19,__SREG__
 142               	.LVL15:
 114:light_ws2812.c **** 
 143               		.loc 1 114 0
 144               	/* #APP */
 145               	 ;  114 "light_ws2812.c" 1
 146 0066 F894      		cli
 147               	 ;  0 "" 2
 148               	.LVL16:
 116:light_ws2812.c ****     curbyte=*data++;
 149               		.loc 1 116 0
 150               	/* #NOAPP */
 151 0068 6115      		cp r22,__zero_reg__
 152 006a 7105      		cpc r23,__zero_reg__
 153 006c 01F0      		breq .L10
 154 006e FC01      		movw r30,r24
 155 0070 680F      		add r22,r24
 156 0072 791F      		adc r23,r25
 157               	.LVL17:
 158               	.L11:
 117:light_ws2812.c **** 
 159               		.loc 1 117 0
 160 0074 8191      		ld r24,Z+
 161               	.LVL18:
 119:light_ws2812.c ****     "       ldi   %0,8  \n\t"
 162               		.loc 1 119 0
 163               	/* #APP */
 164               	 ;  119 "light_ws2812.c" 1
 165 0076 98E0      		       ldi   r25,8  
 166               		loop132:            
 167 0078 48BB      		       out   24,r20 
 168 007a 0000      		nop      
 169 007c 87FF      		       sbrs  r24,7  
 170 007e 28BB      		       out   24,r18 
 171 0080 880F      		       lsl   r24    
 172 0082 0000      		nop      
 173 0084 28BB      		       out   24,r18 
 174 0086 00C0      		rjmp .+0 
 175 0088 9A95      		       dec   r25    
 176 008a 01F4      		       brne  loop132
 177               		
 178               	 ;  0 "" 2
 179               	.LVL19:
 116:light_ws2812.c ****     curbyte=*data++;
 180               		.loc 1 116 0
 181               	/* #NOAPP */
 182 008c E617      		cp r30,r22
 183 008e F707      		cpc r31,r23
 184 0090 01F4      		brne .L11
 185               	.LVL20:
 186               	.L10:
 180:light_ws2812.c ****   sei();
 187               		.loc 1 180 0
 188 0092 3FBF      		out __SREG__,r19
 189               		.loc 1 181 0
 190               	/* #APP */
 191               	 ;  181 "light_ws2812.c" 1
 192 0094 7894      		sei
 193               	 ;  0 "" 2
 194               	.LVL21:
 195               	/* #NOAPP */
 196 0096 0895      		ret
 197               	.LBE15:
 198               	.LBE14:
 199               		.cfi_endproc
 200               	.LFE1:
 202               	.global	ws2812_sendarray
 204               	ws2812_sendarray:
 205               	.LFB2:
  38:light_ws2812.c ****   ws2812_sendarray_mask(data,datlen,_BV(ws2812_pin));
 206               		.loc 1 38 0
 207               		.cfi_startproc
 208               	.LVL22:
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
 213               	.LBB18:
 214               	.LBB19:
 108:light_ws2812.c **** 
 215               		.loc 1 108 0
 216 0098 B89A      		sbi 0x17,0
 110:light_ws2812.c ****   maskhi |=        ws2812_PORTREG;
 217               		.loc 1 110 0
 218 009a 28B3      		in r18,0x18
 219 009c 2E7F      		andi r18,lo8(-2)
 220               	.LVL23:
 111:light_ws2812.c **** 
 221               		.loc 1 111 0
 222 009e 38B3      		in r19,0x18
 223 00a0 3160      		ori r19,lo8(1)
 224               	.LVL24:
 113:light_ws2812.c ****   cli();
 225               		.loc 1 113 0
 226 00a2 4FB7      		in r20,__SREG__
 227               	.LVL25:
 114:light_ws2812.c **** 
 228               		.loc 1 114 0
 229               	/* #APP */
 230               	 ;  114 "light_ws2812.c" 1
 231 00a4 F894      		cli
 232               	 ;  0 "" 2
 233               	.LVL26:
 116:light_ws2812.c ****     curbyte=*data++;
 234               		.loc 1 116 0
 235               	/* #NOAPP */
 236 00a6 6115      		cp r22,__zero_reg__
 237 00a8 7105      		cpc r23,__zero_reg__
 238 00aa 01F0      		breq .L17
 239 00ac FC01      		movw r30,r24
 240 00ae 680F      		add r22,r24
 241 00b0 791F      		adc r23,r25
 242               	.LVL27:
 243               	.L18:
 117:light_ws2812.c **** 
 244               		.loc 1 117 0
 245 00b2 8191      		ld r24,Z+
 246               	.LVL28:
 119:light_ws2812.c ****     "       ldi   %0,8  \n\t"
 247               		.loc 1 119 0
 248               	/* #APP */
 249               	 ;  119 "light_ws2812.c" 1
 250 00b4 98E0      		       ldi   r25,8  
 251               		loop197:            
 252 00b6 38BB      		       out   24,r19 
 253 00b8 0000      		nop      
 254 00ba 87FF      		       sbrs  r24,7  
 255 00bc 28BB      		       out   24,r18 
 256 00be 880F      		       lsl   r24    
 257 00c0 0000      		nop      
 258 00c2 28BB      		       out   24,r18 
 259 00c4 00C0      		rjmp .+0 
 260 00c6 9A95      		       dec   r25    
 261 00c8 01F4      		       brne  loop197
 262               		
 263               	 ;  0 "" 2
 264               	.LVL29:
 116:light_ws2812.c ****     curbyte=*data++;
 265               		.loc 1 116 0
 266               	/* #NOAPP */
 267 00ca E617      		cp r30,r22
 268 00cc F707      		cpc r31,r23
 269 00ce 01F4      		brne .L18
 270               	.LVL30:
 271               	.L17:
 180:light_ws2812.c ****   sei();
 272               		.loc 1 180 0
 273 00d0 4FBF      		out __SREG__,r20
 274               		.loc 1 181 0
 275               	/* #APP */
 276               	 ;  181 "light_ws2812.c" 1
 277 00d2 7894      		sei
 278               	 ;  0 "" 2
 279               	.LVL31:
 280               	/* #NOAPP */
 281 00d4 0895      		ret
 282               	.LBE19:
 283               	.LBE18:
 284               		.cfi_endproc
 285               	.LFE2:
 287               	.global	ws2812_sendarray_mask
 289               	ws2812_sendarray_mask:
 290               	.LFB3:
 104:light_ws2812.c ****   uint8_t curbyte,ctr,masklo;
 291               		.loc 1 104 0
 292               		.cfi_startproc
 293               	.LVL32:
 294               	/* prologue: function */
 295               	/* frame size = 0 */
 296               	/* stack size = 0 */
 297               	.L__stack_usage = 0
 108:light_ws2812.c **** 
 298               		.loc 1 108 0
 299 00d6 27B3      		in r18,0x17
 300 00d8 242B      		or r18,r20
 301 00da 27BB      		out 0x17,r18
 110:light_ws2812.c ****   maskhi |=        ws2812_PORTREG;
 302               		.loc 1 110 0
 303 00dc 28B3      		in r18,0x18
 304 00de 342F      		mov r19,r20
 305 00e0 3095      		com r19
 306 00e2 2323      		and r18,r19
 307               	.LVL33:
 111:light_ws2812.c **** 
 308               		.loc 1 111 0
 309 00e4 38B3      		in r19,0x18
 310 00e6 432B      		or r20,r19
 311               	.LVL34:
 113:light_ws2812.c ****   cli();
 312               		.loc 1 113 0
 313 00e8 3FB7      		in r19,__SREG__
 314               	.LVL35:
 114:light_ws2812.c **** 
 315               		.loc 1 114 0
 316               	/* #APP */
 317               	 ;  114 "light_ws2812.c" 1
 318 00ea F894      		cli
 319               	 ;  0 "" 2
 320               	.LVL36:
 116:light_ws2812.c ****     curbyte=*data++;
 321               		.loc 1 116 0
 322               	/* #NOAPP */
 323 00ec 6115      		cp r22,__zero_reg__
 324 00ee 7105      		cpc r23,__zero_reg__
 325 00f0 01F0      		breq .L24
 326 00f2 FC01      		movw r30,r24
 327 00f4 680F      		add r22,r24
 328 00f6 791F      		adc r23,r25
 329               	.LVL37:
 330               	.L25:
 117:light_ws2812.c **** 
 331               		.loc 1 117 0
 332 00f8 8191      		ld r24,Z+
 333               	.LVL38:
 119:light_ws2812.c ****     "       ldi   %0,8  \n\t"
 334               		.loc 1 119 0
 335               	/* #APP */
 336               	 ;  119 "light_ws2812.c" 1
 337 00fa 98E0      		       ldi   r25,8  
 338               		loop259:            
 339 00fc 48BB      		       out   24,r20 
 340 00fe 0000      		nop      
 341 0100 87FF      		       sbrs  r24,7  
 342 0102 28BB      		       out   24,r18 
 343 0104 880F      		       lsl   r24    
 344 0106 0000      		nop      
 345 0108 28BB      		       out   24,r18 
 346 010a 00C0      		rjmp .+0 
 347 010c 9A95      		       dec   r25    
 348 010e 01F4      		       brne  loop259
 349               		
 350               	 ;  0 "" 2
 351               	.LVL39:
 116:light_ws2812.c ****     curbyte=*data++;
 352               		.loc 1 116 0
 353               	/* #NOAPP */
 354 0110 E617      		cp r30,r22
 355 0112 F707      		cpc r31,r23
 356 0114 01F4      		brne .L25
 357               	.LVL40:
 358               	.L24:
 180:light_ws2812.c ****   sei();
 359               		.loc 1 180 0
 360 0116 3FBF      		out __SREG__,r19
 361               		.loc 1 181 0
 362               	/* #APP */
 363               	 ;  181 "light_ws2812.c" 1
 364 0118 7894      		sei
 365               	 ;  0 "" 2
 366               	/* #NOAPP */
 367 011a 0895      		ret
 368               		.cfi_endproc
 369               	.LFE3:
 371               	.Letext0:
 372               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 373               		.file 3 "light_ws2812.h"
DEFINED SYMBOLS
                            *ABS*:00000000 light_ws2812.c
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:2      *ABS*:0000003d __SP_L__
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:3      *ABS*:0000003f __SREG__
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:4      *ABS*:00000000 __tmp_reg__
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:5      *ABS*:00000001 __zero_reg__
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:11     .text:00000000 ws2812_setleds
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:68     .text:00000028 loop54
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:108    .text:00000048 ws2812_setleds_pin
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:166    .text:00000078 loop132
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:204    .text:00000098 ws2812_sendarray
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:251    .text:000000b6 loop197
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:289    .text:000000d6 ws2812_sendarray_mask
C:\Users\PM\AppData\Local\Temp\ccJengNN.s:338    .text:000000fc loop259

NO UNDEFINED SYMBOLS
